name: Deploy Hugo Site to GitHub Pages

on:
  push:
    branches:
      - main  # Trigger the workflow when code is pushed to the main branch

permissions:
  contents: read  # Grants read access to repository contents
  pages: write    # Allows writing to GitHub Pages
  id-token: write # Required for OIDC authentication

jobs:
  build:
    runs-on: ubuntu-latest  # Use the latest Ubuntu runner

    env:
      HUGO_VERSION: 0.144.2  # Define the Hugo version to install

    steps:
      - name: Install Hugo CLI
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/hugo.deb          
        # Download and install the specified Hugo version

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive  # Ensure submodules are checked out
          fetch-depth: 0  # Fetch all history for proper site generation

      - name: Configure GitHub Pages
        id: pages
        uses: actions/configure-pages@v5
        # Setup GitHub Pages configuration for deployment

      - name: Build Hugo site
        env:
          HUGO_CACHEDIR: ${{ runner.temp }}/hugo_cache  # Use a temporary cache directory
          HUGO_ENVIRONMENT: production  # Set the environment to production
          TZ: America/Los_Angeles  # Define the time zone
        run: |
          hugo \
            --gc \  # Run garbage collection to clean up unused files
            --minify \  # Minify the final output for better performance
            --baseURL "${{ steps.pages.outputs.base_url }}/"
        # Generate the static site using Hugo

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public  # Upload the generated site for deployment
        # Store the generated files for later use in the deploy step

  deploy:
    environment:
      name: github-pages  # Define the GitHub Pages environment
      url: ${{ steps.deployment.outputs.page_url }}  # Set the deployment URL

    runs-on: ubuntu-latest  # Use the latest Ubuntu runner
    needs: build  # Ensure build completes before deploying

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        # Deploy the generated site to GitHub Pages
